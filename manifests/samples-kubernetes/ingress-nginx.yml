apiVersion: v1

kind: Pod

metadata:
  name: "nginx-pod"

spec:
  containers:
    - name: "nginx-pod"
      image: "nginx:alpine"
      env:
        - name: DD_AGENT_HOST
          valueFrom:
            fieldRef:
              fieldPath: status.hostIP # Extraer la IP del host
      resources:
        requests:
          memory: "64Mi"
          cpu: "200m"
        limits:
          memory: "128Mi"
          cpu: "500m"
      readinessProbe:
        httpGet:
          path: /
          port: 80
        initialDelaySeconds: 5
        periodSeconds: 10
      livenessProbe:
        tcpSocket:
          port: 80
        initialDelaySeconds: 15
        periodSeconds: 20
      ports:
        - containerPort: 80
---
apiVersion: apps/v1

kind: Deployment

metadata:
  name: "hello-v1"

spec:
  replicas: 1
  selector:
    matchLabels:
      role: "hello-v1"
  template:
    metadata:
      labels:
        role: "hello-v1"
    spec:
      containers:
        - name: "hello-v1"
          image: gcr.io/google-samples/hello-app:1.0
          ports:
            - containerPort: 8080 # Input
---
apiVersion: apps/v1

kind: Deployment

metadata:
  name: "hello-v2"

spec:
  replicas: 1
  selector:
    matchLabels:
      role: "hello-v2"
  template:
    metadata:
      labels:
        role: "hello-v2"
    spec:
      containers:
        - name: "hello-v2"
          image: gcr.io/google-samples/hello-app:2.0
          ports:
            - containerPort: 8080 # Input
---
apiVersion: v1

kind: Service

metadata:
  name: "hello-v1"

spec:
  type: ClusterIP
  selector:
    role: "hello-v1"
  ports:
    - port: 3000 # Input
      targetPort: 8080 # Output
---
apiVersion: v1

kind: Service

metadata:
  name: "hello-v2"

spec:
  type: ClusterIP
  selector:
    role: "hello-v2"
  ports:
    - port: 4000 # Input
      targetPort: 8080 # Output
---
apiVersion: networking.k8s.io/v1

kind: Ingress

metadata:
  name: hello-ingress
  annotations:
    kubernetes.io/ingress.class: nginx

spec:
  rules:
    - host: localhost # kubernetes.docker.internal
      http:
        paths:
          - path: /v1
            pathType: Prefix
            backend:
              service:
                name: "hello-v1"
                port:
                  number: 3000
          - path: /v2
            pathType: Prefix
            backend:
              service:
                name: "hello-v2"
                port:
                  number: 4000